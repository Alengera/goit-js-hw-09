{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,KACTJ,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHM,YAAW,KACTH,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAKFO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAaC,SAASJ,EAAWK,OACjCC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,QAKtC,SAA0BF,EAAYG,EAAMC,GAC1C,MAAMC,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,MACMC,EAAUxB,EAAcuB,EAAI,EADpBN,EAAaM,EAAIH,GAE1BK,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACfwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,MAAU,IAE/D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAChBwB,QAAQC,IAAI,sBAAoB1B,QAAeC,MAAU,IAEjEoB,EAASO,KAAKL,E,CAGhBrB,QAAQ2B,IAAIR,E,CAlBZS,CAAiBd,EAAYG,EAAMC,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  generatePromises(firstDelay, step, amount);\n}\n\nfunction generatePromises(firstDelay, step, amount) {\n  const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const delay = firstDelay + i * step;\n    const promise = createPromise(i + 1, delay)\n        .then(({ position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","parseInt","value","step","amount","promises","i","promise","then","console","log","catch","push","all","$47d4ff9957288465$var$generatePromises"],"version":3,"file":"03-promises.bf99cfad.js.map"}